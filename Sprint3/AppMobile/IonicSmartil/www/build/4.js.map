{"version":3,"sources":["../../src/pages/menu/menu.module.ts","../../src/pages/menu/menu.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACd;AAUlC;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAR1B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,uDAAQ;aACT;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,uDAAQ,CAAC;aACnC;SACF,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;ACT0B;AACF;AAenD;IAaE,kBAAmB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;QAZzC,kCAAkC;QAClC,aAAQ,GAAG,UAAU,CAAC;QAKtB,UAAK,GAAoB;YACvB,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;YAC/F,EAAE,KAAK,EAAE,mBAAmB,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE;YAC5G,EAAE,KAAK,EAAE,gBAAgB,EAAE,QAAQ,EAAE,aAAa,EAAE,IAAI,EAAE,SAAS,EAAE;SACtE,CAAC;IAE2C,CAAC;IAE9C,2BAAQ,GAAR,UAAS,IAAmB;QAC1B,IAAI,MAAM,GAAG,EAAE,CAAC;QAEhB,6DAA6D;QAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,MAAM,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;QACpC,CAAC;QAED,8CAA8C;QAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,+CAA+C;YAC/C,8CAA8C;YAC9C,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAED,2BAAQ,GAAR,UAAS,IAAmB;QAC1B,4BAA4B;QAC5B,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;QAE5C,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,QAAQ,CAAC,WAAW,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBAChF,MAAM,CAAC,SAAS,CAAC;YACnB,CAAC;YACD,MAAM,CAAC;QACT,CAAC;QAED,qEAAqE;QACrE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxE,MAAM,CAAC,SAAS,CAAC;QACnB,CAAC;QACD,MAAM,CAAC;IACT,CAAC;IA5Ce;QAAf,yEAAS,CAAC,0DAAG,CAAC;kCAAM,0DAAG;yCAAC;IALd,QAAQ;QAJpB,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;WACG;SACzB,CAAC;iBAcyC;OAb9B,QAAQ,CAmDpB;IAAD,CAAC;AAAA;SAnDY,QAAQ,e","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { MenuPage } from './menu';\n\n@NgModule({\n  declarations: [\n    MenuPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(MenuPage),\n  ],\n})\nexport class MenuPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/menu/menu.module.ts","import { Tab2Page } from './../tab2/tab2';\nimport { Tab1Page } from './../tab1/tab1';\nimport { TabsPage } from './../tabs/tabs';\nimport { Component, ViewChild } from '@angular/core';\nimport { IonicPage, NavController, Nav } from 'ionic-angular';\n \nexport interface PageInterface {\n  title: string;\n  pageName: string;\n  tabComponent?: any;\n  index?: number;\n  icon: string;\n}\n \n@IonicPage()\n@Component({\n  selector: 'page-menu',\n  templateUrl: 'menu.html',\n})\nexport class MenuPage {\n  // Basic root for our content view\n  rootPage = 'TabsPage';\n \n  // Reference to the app's root nav\n  @ViewChild(Nav) nav: Nav;\n \n  pages: PageInterface[] = [\n    { title: 'Mes Boites', pageName: 'TabsPage', tabComponent: 'Tab1Page', index: 0, icon: 'mail' },\n    { title: 'Ajouter une boite', pageName: 'TabsPage', tabComponent: 'Tab2Page', index: 1, icon: 'add-circle' },\n    { title: 'Se DÃ©connecter', pageName: 'SpecialPage', icon: 'log-out' },\n  ];\n \n  constructor(public navCtrl: NavController) { }\n \n  openPage(page: PageInterface) {\n    let params = {};\n \n    // The index is equal to the order of our tabs inside tabs.ts\n    if (page.index) {\n      params = { tabIndex: page.index };\n    }\n \n    // The active child nav is our Tabs Navigation\n    if (this.nav.getActiveChildNav() && page.index != undefined) {\n      this.nav.getActiveChildNav().select(page.index);\n    } else {\n      // Tabs are not active, so reset the root page \n      // In this case: moving to or from SpecialPage\n      this.nav.setRoot(page.pageName, params);\n    }\n  }\n \n  isActive(page: PageInterface) {\n    // Again the Tabs Navigation\n    let childNav = this.nav.getActiveChildNav();\n \n    if (childNav) {\n      if (childNav.getSelected() && childNav.getSelected().root === page.tabComponent) {\n        return 'primary';\n      }\n      return;\n    }\n \n    // Fallback needed when there is no active childnav (tabs not active)\n    if (this.nav.getActive() && this.nav.getActive().name === page.pageName) {\n      return 'primary';\n    }\n    return;\n  }\n \n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/menu/menu.ts"],"sourceRoot":""}